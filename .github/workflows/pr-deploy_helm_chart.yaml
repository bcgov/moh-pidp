name: Deploy Helm Charts - PR

# on:
#   workflow_dispatch:
#   push:
#     branches-ignore:
#       - 'develop'
#       - 'test'
#       - 'main'
#     paths:
#       - "charts/**"
#       - "./deploy/pr_values.yaml"

# Only trigger, when the build workflow succeeded
on:
  workflow_run:
    workflows: ["Build All - PR"]
    types:
      - completed

# This will terminate builds that are previously, but continuing to run.  Saves GHA hours.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  helm-deployment:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1 
  
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_CLUSTER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_PIPELINE_SERVICE_ACCOUNT_TOKEN}}
  
      - name: Helm Deploy / install command
        run: |
          echo current installed helm releases
          helm list --namespace d8a8f9-dev
  
          echo installing helm chart...
          helm upgrade --install --wait --values ./deploy/pr_values.yaml --namespace d8a8f9-dev pr-${{ github.event.number }} charts/pidp --debug 


#  Need to override .Values.global.image.tag with the value of the pr image tag ( --set global.image.tag=pr-${{ github.event.number }} )
# We may need to do some voodoo here to ensure that the build is completed first, before the helm changes are deployed. 
# Another option is to create two scripts -> one to distinguish upgrades, and another to distinguish fresh installs of pr deploys 