name: Build CronJobs

on:
  push:
    branches:
      - "develop"
      - "test"
      - "main"
    paths: "infra/cronjobs"

permissions: read-all

# This will terminate builds that are previously, but continuing to run.  Saves GHA hours.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Cron Job
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./infra/cronjobs"
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: OC Login to Silver OCP
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_CLUSTER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_PIPELINE_SERVICE_ACCOUNT_TOKEN}}

      - name: cron deployment on d8a8f9-dev environment
        if: ${{ github.ref_name == 'develop' }}
        run: |
          oc project d8a8f9-dev
          echo creating cron jobs...
          oc process -f .\endorsement-reminder-scheduler.cron.yml -p ENV_NAME=dev | oc apply -f -

      - name: cron deployment on d8a8f9-test environment
        if: ${{ github.ref_name == 'test' }}
        run: |
          oc project d8a8f9-test
          echo creating cron jobs...
          oc process -f .\endorsement-reminder-scheduler.cron.yml -p ENV_NAME=test | oc apply -f -

      - name: cron deployment on d8a8f9-test environment
        if: ${{ github.ref_name == 'main' }}
        run: |
          oc project d8a8f9-prod
          echo creating cron jobs...
          oc process -f .\endorsement-reminder-scheduler.cron.yml -p ENV_NAME=prod | oc apply -f -
