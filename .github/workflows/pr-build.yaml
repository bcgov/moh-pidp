name: Build All - PR

on:
  workflow_dispatch:
  push:
    branches-ignore:
    - 'develop'
    - 'test'
    - 'main'
  pull_request:
    branches-ignore:
    - 'develop'
    - 'test'
    - 'main'

permissions: read-all

# This will terminate builds that are previously, but continuing to run.  Saves GHA hours.
# TODO: This will cause future pr problems. It's an edge case. Need to be discussed
# If this is the first time a workflow occurs there's some init actions within the helm chart (eg: init a DB and init a rabbitmq)
# If a PR is submitted immediatly after the createion of a PR the creation PR will be cancled and the init functions triggered by it will be termintated (or never run).
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

jobs:

  paths-tests:
    # This job is designed to look for changes in specific folders which will be used by future jobs to determin if they should be executed or skipped.
    name: Check for Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend}}
      plrintake: ${{ steps.filter.outputs.plrintake}}
      webapi: ${{ steps.filter.outputs.webapi}}
      helmdeployment: ${{ steps.filter.outputs.helmdeployment}}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - './workspace/**'
            plrintake:
              - './backend/services.plr-intake/**'
              - './backend/services.plr-intake.tests/**'
            webapi:
              - './backend/webapi/**'
              - './backend/webapi/tests/**'
            helmdeployment:
              - './charts/**'
              - './deploy/**'

  build-and-deploy-frontend:
    name: Frontend Build and Deploy
    needs: [paths-tests]
    if: ${{ needs.paths-tests.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workspace"

    permissions:
      contents: read
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: YARN Install
        run: |
          yarn install

      - name: YARN Build
        run: |
          yarn build


      - name: Get pr number from GH cli command (pushing to pr)
        if: ${{ github.event.number == ''}}
        # TODO: In some cases this action produces an incorrect pr number. eg: it results in 319 when the PR triggering the action is #324.
        # TODO: This event has been triggered on an opening of a pr. both the "pushing on pr" and "opening a pr" needs to be further investigated. The if condition isn't always a valid test.
        run: |
          echo " github.event.number = ${{ github.event.number == ''}}"
          echo "pr_number=$(gh pr view --json number -q .number || echo "")" >> "$GITHUB_ENV"
          echo " pr_number = ${{ env.pr_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Get pr number from github.event.number (opening a pr)
        if: ${{ github.event.number != ''}}
        run: |
          echo " github.event.number = ${{ github.event.number == ''}}"
          echo "pr_number=${{ github.event.number }}" >> "$GITHUB_ENV"
          echo " pr_number = ${{ env.pr_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-frontend:pr-${{ env.pr_number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-frontend:pr-${{ env.pr_number }}


  build-and-deploy-plr-intake:
    name: PLR Intake Backend Build and Deploy
    needs: [paths-tests]
    if: ${{ needs.paths-tests.outputs.plrintake == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/services.plr-intake"
    permissions:
      contents: read
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master


      - name: Get pr number from GH cli command (pushing to pr)
        if: ${{ github.event.number == ''}}

        run: echo "pr_number=$(gh pr view --json number -q .number || echo "")" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Get pr number from github.event.number (opening a pr)
        if: ${{ github.event.number != ''}}

        run: echo "pr_number=${{ github.event.number }}" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-plr-intake:pr-${{ env.pr_number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-plr-intake:pr-${{ env.pr_number }}


  build-and-deploy-webapi:
    name: WebAPI Backend Build and Deploy
    needs: [paths-tests]
    if: ${{ needs.paths-tests.outputs.webapi == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/webapi"
    permissions:
      contents: read
      id-token: write

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master


      - name: Get pr number from GH cli command (pushing to pr)
        if: ${{ github.event.number == ''}}

        run: echo "pr_number=$(gh pr view --json number -q .number || echo "")" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Get pr number from github.event.number (opening a pr)
        if: ${{ github.event.number != ''}}

        run: echo "pr_number=${{ github.event.number }}" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-webapi:pr-${{ env.pr_number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-webapi:pr-${{ env.pr_number }}


  helm-deployment:
    name: Helm Deployment
    needs: [build-and-deploy-webapi, build-and-deploy-plr-intake, build-and-deploy-frontend, paths-tests]
    if: ${{ needs.paths-tests.outputs.helmdeployment == 'true' }}
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@master

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_CLUSTER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_PIPELINE_SERVICE_ACCOUNT_TOKEN}}

      - name: Get pr number from GH cli command (pushing to pr)
        if: ${{ github.event.number == ''}}

        run: echo "pr_number=$(gh pr view --json number -q .number || echo "")" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Get pr number from github.event.number (opening a pr)
        if: ${{ github.event.number != ''}}

        run: echo "pr_number=${{ github.event.number }}" >> "$GITHUB_ENV"

        env:

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Helm Deploy / install command
        run: |
          echo current installed helm releases
          helm list --namespace d8a8f9-dev

          echo installing helm chart...
          helm upgrade --install --wait --values ./deploy/pr_values.yaml --namespace d8a8f9-dev pr-${{ env.pr_number }} charts/pidp --debug --set global.image.tag=pr-${{ env.pr_number }}
