name: Build All - PR

on:
  workflow_dispatch:
  push:
    # paths:
      # - "workspace/**"
      # - "backend/services.plr-intake/**"
      # - "backend/services.plr-intake.tests/**"
      # - "backend/webapi/**"
      # - "backend/webapi.tests/**"
    branches-ignore:
    - 'develop'
    - 'test'
    - 'main'
  pull_request:
    # paths:
    #   - "workspace/**"
    #   - "backend/services.plr-intake/**"
    #   - "backend/services.plr-intake.tests/**"
    #   - "backend/webapi/**"
    #   - "backend/webapi.tests/**"
    branches-ignore:
    - 'develop'
    - 'test'
    - 'main'


# This will terminate builds that are previously, but continuing to run.  Saves GHA hours.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy-frontend:
    name: Frontend Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./workspace"
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: YARN Install
        run: |
          yarn install

      - name: YARN Build
        run: |
          yarn build

      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-frontend:pr-${{ github.event.number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-frontend:pr-${{ github.event.number }}

     
  build-and-deploy-plr-intake:
    name: PLR Intake Backend Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/services.plr-intake"
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master

      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-plr-intake:pr-${{ github.event.issue.number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-plr-intake:pr-${{ github.event.issue.number }}


  build-and-deploy-webapi:
    name: WebAPI Backend Build and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./backend/webapi"
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@master

      - name: "Docker Build"
        run: |
          docker build -t image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-webapi:pr-${{ github.event.issue.number }} .

      # Uses the builder service account token
      - name: "Docker Login to Silver OCP"
        uses: docker/login-action@v2
        with:
          registry: image-registry.apps.silver.devops.gov.bc.ca
          username: builder
          password: ${{ secrets.SILVER_TOOLS_BUILDER_TOKEN }}

      - name: "Push image"
        run: |
          docker push image-registry.apps.silver.devops.gov.bc.ca/d8a8f9-tools/pidp-webapi:pr-${{ github.event.issue.number }}
  
  helm-deployment:
    needs: [build-and-deploy-webapi, build-and-deploy-plr-intake, build-and-deploy-frontend]
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1 
  
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_CLUSTER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_PIPELINE_SERVICE_ACCOUNT_TOKEN}}
  
      - name: Helm Deploy / install command
        run: |
          echo current installed helm releases
          helm list --namespace d8a8f9-dev
  
          echo installing helm chart...
          helm upgrade --install --wait --values ./deploy/pr_values.yaml --namespace d8a8f9-dev pr-${{ github.event.issue.number }} charts/pidp --debug --set global.image.tag=pr-${{ github.event.number }}