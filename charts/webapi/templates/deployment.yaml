{{ $release := .Release.Name }}
{{ $ocEnv := regexFind "([^-]*$)" .Release.Namespace }}
{{ $domain := .Values.global.vanityURL }}
{{ $isPR := hasPrefix "pr-" .Release.Name }}
## Derived release name
{{ $drn := ternary $release $ocEnv $isPR }}
{{ $isProd := contains "prod" $ocEnv }}
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webapi.fullname" . }}
  labels:
    {{- include "webapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "webapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.global.commit_sha }}
        commit_sha: {{ .Values.global.commit_sha }}
        {{- end}}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PlrClient__Url
              value: http://{{ $release }}-plr-intake:8080/api
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.aspnetcore.environment }}
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: database-cm
                  key: database-host
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-password
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-username
            - name: POSTGRESQL_DATABASE
              {{- if $isPR }}
              value: pidp_{{ $drn }}
              {{ else }}
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-name
              {{- end }}
            - name: ConnectionStrings__PidpDatabase
              value: "Host=$(DB_HOST);Port=5432;Database=$(POSTGRESQL_DATABASE);Username=$(POSTGRESQL_USER);Password=$(POSTGRESQL_PASSWORD)"
            - name: ApplicationUrl
              value: "https://{{ if $isProd }}{{else}}{{ $release }}.{{end}}{{ $domain }}"
          envFrom:
            - secretRef:
                name: keycloak-secrets
            - secretRef:
                name: canada-post-addresscomplete-secrets
            - secretRef:
                name: ches
            - configMapRef:
                name: mail-settings
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
