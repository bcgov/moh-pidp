kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
  annotations:
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "namespace": "{{ .Values.licensePlate }}-tools",
            "name": "{{ .Values.appName }}:{{ .Values.imageStreamTag }}"
          },
          "fieldPath": "spec.template.spec.containers[1].image"
        }
      ]
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}

    spec:
      initContainers:
        - name: midas-crone
          image: {{ .Values.dockerhost }}/f088b1-tools/midas-crone:latest
          imagePullPolicy: Always
          env:
            - name: application_url
              value: {{ .Values.application_url }}
          resources:
              limits:
                cpu: {{ .Values.cpuLimit }}
                memory: {{ .Values.memoryLimit }}
              requests:
                cpu: {{ .Values.cpuRequests }}
                memory: {{ .Values.memoryRequests }}
          volumeMounts:
            - name: who-is-active
              mountPath: /tmp/who_is_active.json
              subPath: who_is_active.json
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      containers:
        - name: midas-probe
          image: {{ .Values.dockerhost }}/{{ .Values.licensePlate }}-tools/{{ .Values.appName }}:{{ .Values.imageStreamTag }}
          imagePullPolicy: Always
          env:
            - name: environment
              value: {{ .Values.environment }}
            - name: servicename
              value: {{ .Values.appName }}
            - name: cluster
              value: {{ .Values.cluster }}
            - name: gslb_host
              value: {{ .Values.gslb_host }}
            - name: namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: kube-api-access-rsh4p
              readOnly: true
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            - name: who-is-active
              mountPath: /tmp/who_is_active.json
              subPath: who_is_active.json
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      automountServiceAccountToken: false
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccount: midas-probe
      volumes:
        - name: kube-api-access-rsh4p
          projected:
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: namespace
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
              - configMap:
                  name: openshift-service-ca.crt
                  items:
                    - key: service-ca.crt
                      path: service-ca.crt
            defaultMode: 420
        - name: who-is-active
          emptyDir: {}
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
