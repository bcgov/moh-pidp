apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cicd-pipeline
  namespace: d8a8f9-tools
spec:
  params:
    - name: git-url
    - name: git-revision
      default: develop
    - name: git-short-sha
    - name: image-registry
      default: image-registry.openshift-image-registry.svc:5000/d8a8f9-tools
    - name: image-tag
      default: develop
    - name: release_name
      default: dev
    - name: release_namespace
      default: d8a8f9-dev
    - name: release_version
      default: "v0.1.0"
    - name: values_file
      default: deploy/dev_values.yaml
  workspaces:
    - name: source
  tasks:
    - name: git-clone
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.git-url)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: subdirectory
          value: moh-pidp
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: revision
          value: $(params.git-revision)
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
      taskRef:
        kind: ClusterTask
        name: git-clone-v0-22-0
    - name: build-frontend
      workspaces:
        - name: source
          workspace: source
      taskRef:
        kind: Task
        name: build-frontend
      params:
        - name: PATH_CONTEXT
          value: moh-pidp/workspace/
      runAfter: 
        - git-clone
    - name: build-frontend-image
      workspaces:
        - name: source
          workspace: source
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.image-registry)/pidp-frontend:$(params.image-tag)
        - name: CONTEXT
          value: moh-pidp/workspace/
        - name: DOCKERFILE
          value: moh-pidp/workspace/Dockerfile
        - name: EXTRA_ARGS
          value: 
            - --skip-tls-verify
      runAfter: 
        - build-frontend
    - name: build-webapi
      workspaces:
        - name: source
          workspace: source
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.image-registry)/pidp-webapi:$(params.image-tag)
        - name: CONTEXT
          value: moh-pidp/backend/webapi/
        - name: DOCKERFILE
          value: moh-pidp/backend/webapi/Dockerfile
        - name: EXTRA_ARGS
          value: 
            - --skip-tls-verify
      runAfter: 
        - git-clone
    - name: build-plr-intake
      workspaces:
        - name: source
          workspace: source
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: IMAGE
          value: $(params.image-registry)/pidp-plr-intake:$(params.image-tag)
        - name: CONTEXT
          value: moh-pidp/backend/services.plr-intake/
        - name: DOCKERFILE
          value: moh-pidp/backend/services.plr-intake/Dockerfile
        - name: EXTRA_ARGS
          value: 
            - --skip-tls-verify
      runAfter: 
        - git-clone
    - name: install-upgrade
      workspaces:
        - name: source
          workspace: source
      params:
      - name: charts_dir
        value: ./moh-pidp/charts/pidp
      - name: release_version
        value: $(params.release_version)
      - name: release_name
        value: $(params.release_name)
      - name: release_namespace
        value: $(params.release_namespace)
      - name: overwrite_values
        value: global.image.tag=$(params.image-tag),global.commit_sha=$(params.git-revision)
      - name: values_file
        value: moh-pidp/$(params.values_file)
      taskRef:
        name: helm-upgrade-from-source
      runAfter: 
        - git-clone
        - build-plr-intake
        - build-frontend-image
        - build-webapi