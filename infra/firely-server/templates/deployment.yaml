{{- $fullName := include "firely-server.fullname" . -}}
{{- $validationName := printf "%s-validation" $fullName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "firely-server.fullname" . }}
  labels:
    {{- include "firely-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "firely-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "firely-server.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/settings.configmap: {{ include (print $.Template.BasePath "/settings-configmap.yaml") . | sha256sum }}
        {{- if .Values.license.value }}
        checksum/license-secret: {{ include (print $.Template.BasePath "/license-secret.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: default
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- range $index, $plugin := .Values.plugins }}
      - name: download-plugin-{{ $index }}
        image: alpine
        command: ['sh', '-c', 'wget -O plugin{{$index}}.dll "{{ $plugin.url }}" && echo "{{ $plugin.checksum }} *plugin{{$index}}.dll" | sha256sum -c && mv  plugin{{$index}}.dll /plugin-dir']
        volumeMounts:
        - name: plugindir
          mountPath: "/plugin-dir"
      {{- end }}
      {{- if .Values.persistence.enabled }}
      # Ensure that the service account can read/write from the persistent volume
      - name: init-permissions
        image: busybox
        command: ['sh', '-c', 'chmod -R 777 /var/run/vonk']
        volumeMounts:
        - name: firely-server-storage
          mountPath: /var/run/vonk
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4080
              protocol: TCP
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          envFrom:
          {{- if .Values.envFromSecret }}
          - secretRef:
              name: {{ .Values.envFromSecret }}
          {{- end }}
          env:
          - name: SERVICE_INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          - name: SERVICE_VERSION
            value: {{ .Values.image.tag }}
          - name: SERVICE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_USER
            value: '1010800000'
          - name: APP_GROUP
            value: '1010800000'
          {{- if .Values.validation.enabled }}
          - name: VONK_Validation__Endpoint
            value: "http://{{ $validationName }}:{{ .Values.validation.port }}/api/Validate"
          {{- end }}
          {{- if .Values.extraEnvs }}
          {{- with .Values.extraEnvs }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- end }}

          volumeMounts:
          - name: firely-server-storage
            mountPath: /var/run/vonk
          {{- if not .Values.license.mountedFromExtraVolumes }}
          - name: firely-server-license
            mountPath: {{ .Values.license.mountPath }}/{{ .Values.license.fileName }}
            subPath: {{ .Values.license.fileName }}
            readOnly: true
          {{- end }}
          - name: firely-server-settings
            mountPath: /app/appsettings.json
            subPath: appsettings.json
          - name: firely-server-settings
            mountPath: /app/logsettings.json
            subPath: logsettings.json
          - name: plugindir
            mountPath: /app/plugins/downloaded-plugins
          {{- if .Values.extraMountPoints }}
            {{- toYaml .Values.extraMountPoints | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: firely-server-storage
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          {{- if .Values.persistence.existingPVClaim }}
          claimName: {{ .Values.persistence.existingPVClaim }}
          {{- else }}
          claimName: {{ include "firely-server.fullname" . }}-claim
          {{- end -}}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: firely-server-settings
        configMap:
          name: {{ include "firely-server.fullname" . }}-settings-json
      {{- if not .Values.license.mountedFromExtraVolumes }}
      - name: firely-server-license
        {{- if .Values.license.secretName }}
        secret:
          secretName: {{ .Values.license.secretName  }}
        {{- else if .Values.license.value }}
        secret:
          secretName: {{ include "firely-server.fullname" . }}-license-secret
        {{- else }}
        emptyDir: {}
        {{- end }}
        {{- end }}
      - name: plugindir
        emptyDir: {}
      {{- if .Values.extraVolumes }}
      {{- with .Values.extraVolumes }}
          {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
